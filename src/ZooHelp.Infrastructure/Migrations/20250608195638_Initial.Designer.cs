// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZooHelp.Infrastructure;

#nullable disable

namespace ZooHelp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250608195638_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZooHelp.Domain.SpeciesContext.Entities.BreedEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("species_id")
                        .HasColumnType("uuid")
                        .HasColumnName("species_id");

                    b.ComplexProperty<Dictionary<string, object>>("Name", "ZooHelp.Domain.SpeciesContext.Entities.BreedEntity.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("name");
                        });

                    b.HasKey("Id")
                        .HasName("pk_breeds");

                    b.HasIndex("species_id")
                        .HasDatabaseName("ix_breeds_species_id");

                    b.ToTable("breeds", (string)null);
                });

            modelBuilder.Entity("ZooHelp.Domain.SpeciesContext.Entities.SpeciesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.ComplexProperty<Dictionary<string, object>>("Name", "ZooHelp.Domain.SpeciesContext.Entities.SpeciesEntity.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("name");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Title", "ZooHelp.Domain.SpeciesContext.Entities.SpeciesEntity.Title#Title", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("title");
                        });

                    b.HasKey("Id")
                        .HasName("pk_species");

                    b.ToTable("species", (string)null);
                });

            modelBuilder.Entity("ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("integer")
                        .HasColumnName("experience_years");

                    b.ComplexProperty<Dictionary<string, object>>("Email", "ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity.Email#Email", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("email");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("name");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PhoneNumber", "ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity.PhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("phone_number");
                        });

                    b.HasKey("Id")
                        .HasName("pk_volunteers");

                    b.ToTable("volunteers", (string)null);
                });

            modelBuilder.Entity("ZooHelp.Domain.VolunteerContext.Entities.PetEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("BreedId")
                        .HasColumnType("uuid")
                        .HasColumnName("breed_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("HelpStatus")
                        .HasColumnType("integer")
                        .HasColumnName("help_status");

                    b.Property<bool>("IsCastrated")
                        .HasColumnType("boolean")
                        .HasColumnName("is_castrated");

                    b.Property<bool>("IsVaccinated")
                        .HasColumnType("boolean")
                        .HasColumnName("is_vaccinated");

                    b.Property<Guid?>("VolunteerEntityId")
                        .HasColumnType("uuid")
                        .HasColumnName("volunteer_entity_id");

                    b.Property<Guid?>("VolunteerEntityId1")
                        .HasColumnType("uuid")
                        .HasColumnName("volunteer_entity_id1");

                    b.Property<Guid?>("VolunteerEntityId2")
                        .HasColumnType("uuid")
                        .HasColumnName("volunteer_entity_id2");

                    b.Property<Guid?>("volunteer_id")
                        .HasColumnType("uuid")
                        .HasColumnName("volunteer_id");

                    b.ComplexProperty<Dictionary<string, object>>("Address", "ZooHelp.Domain.VolunteerContext.Entities.PetEntity.Address#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Apartment")
                                .HasColumnType("text")
                                .HasColumnName("apartment");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("city");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("country");

                            b1.Property<string>("House")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("house");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("street");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("zip_code");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("BirthDate", "ZooHelp.Domain.VolunteerContext.Entities.PetEntity.BirthDate#DateOfBirth", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTimeOffset>("Value")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("birth_date");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Color", "ZooHelp.Domain.VolunteerContext.Entities.PetEntity.Color#Color", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)")
                                .HasColumnName("color");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Description", "ZooHelp.Domain.VolunteerContext.Entities.PetEntity.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("HealthInformation", "ZooHelp.Domain.VolunteerContext.Entities.PetEntity.HealthInformation#HealthInformation", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("character varying(1000)")
                                .HasColumnName("health_information");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Height", "ZooHelp.Domain.VolunteerContext.Entities.PetEntity.Height#Height", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasMaxLength(100000)
                                .HasColumnType("integer")
                                .HasColumnName("height");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "ZooHelp.Domain.VolunteerContext.Entities.PetEntity.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("name");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PhoneNumber", "ZooHelp.Domain.VolunteerContext.Entities.PetEntity.PhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)")
                                .HasColumnName("phone");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Weight", "ZooHelp.Domain.VolunteerContext.Entities.PetEntity.Weight#Weight", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasMaxLength(500000)
                                .HasColumnType("integer")
                                .HasColumnName("weight");
                        });

                    b.HasKey("Id")
                        .HasName("pk_pets");

                    b.HasIndex("BreedId")
                        .HasDatabaseName("ix_pets_breed_id");

                    b.HasIndex("VolunteerEntityId")
                        .HasDatabaseName("ix_pets_volunteer_entity_id");

                    b.HasIndex("VolunteerEntityId1")
                        .HasDatabaseName("ix_pets_volunteer_entity_id1");

                    b.HasIndex("VolunteerEntityId2")
                        .HasDatabaseName("ix_pets_volunteer_entity_id2");

                    b.HasIndex("volunteer_id")
                        .HasDatabaseName("ix_pets_volunteer_id");

                    b.ToTable("pets", (string)null);
                });

            modelBuilder.Entity("ZooHelp.Domain.SpeciesContext.Entities.BreedEntity", b =>
                {
                    b.HasOne("ZooHelp.Domain.SpeciesContext.Entities.SpeciesEntity", null)
                        .WithMany("Breeds")
                        .HasForeignKey("species_id")
                        .HasConstraintName("fk_breeds_species_species_id");
                });

            modelBuilder.Entity("ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity", b =>
                {
                    b.OwnsOne("ZooHelp.Domain.Shared.ValueObjects.Description", "Description", b1 =>
                        {
                            b1.Property<Guid>("VolunteerEntityId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("text")
                                .HasColumnName("description");

                            b1.HasKey("VolunteerEntityId");

                            b1.ToTable("volunteers");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerEntityId")
                                .HasConstraintName("fk_volunteers_volunteers_id");
                        });

                    b.OwnsOne("ZooHelp.Domain.VolunteerContext.ValueObjects.RequisiteList", "RequisitesForHelp", b1 =>
                        {
                            b1.Property<Guid>("VolunteerEntityId")
                                .HasColumnType("uuid");

                            b1.HasKey("VolunteerEntityId");

                            b1.ToTable("volunteers");

                            b1.ToJson("requisites_for_help");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerEntityId")
                                .HasConstraintName("fk_volunteers_volunteers_id");

                            b1.OwnsMany("ZooHelp.Domain.VolunteerContext.ValueObjects.Requisite", "Requisites", b2 =>
                                {
                                    b2.Property<Guid>("RequisiteListVolunteerEntityId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("__synthesizedOrdinal")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.HasKey("RequisiteListVolunteerEntityId", "__synthesizedOrdinal");

                                    b2.ToTable("volunteers");

                                    b2.ToJson("requisites_for_help");

                                    b2.WithOwner()
                                        .HasForeignKey("RequisiteListVolunteerEntityId")
                                        .HasConstraintName("fk_volunteers_volunteers_requisite_list_volunteer_entity_id");

                                    b2.OwnsOne("ZooHelp.Domain.Shared.ValueObjects.Description", "Description", b3 =>
                                        {
                                            b3.Property<Guid>("RequisiteListVolunteerEntityId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("Requisite__synthesizedOrdinal")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .ValueGeneratedOnUpdateSometimes()
                                                .HasMaxLength(500)
                                                .HasColumnType("character varying(500)")
                                                .HasColumnName("description");

                                            b3.HasKey("RequisiteListVolunteerEntityId", "Requisite__synthesizedOrdinal");

                                            b3.ToTable("volunteers");

                                            b3.ToJson("requisites_for_help");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisiteListVolunteerEntityId", "Requisite__synthesizedOrdinal")
                                                .HasConstraintName("fk_volunteers_volunteers_requisite_list_volunteer_entity_id_requis");
                                        });

                                    b2.OwnsOne("ZooHelp.Domain.Shared.ValueObjects.Name", "Name", b3 =>
                                        {
                                            b3.Property<Guid>("RequisiteListVolunteerEntityId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("Requisite__synthesizedOrdinal")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .ValueGeneratedOnUpdateSometimes()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("name");

                                            b3.HasKey("RequisiteListVolunteerEntityId", "Requisite__synthesizedOrdinal");

                                            b3.ToTable("volunteers");

                                            b3.ToJson("requisites_for_help");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisiteListVolunteerEntityId", "Requisite__synthesizedOrdinal")
                                                .HasConstraintName("fk_volunteers_volunteers_requisite_list_volunteer_entity_id_requis");
                                        });

                                    b2.Navigation("Description")
                                        .IsRequired();

                                    b2.Navigation("Name")
                                        .IsRequired();
                                });

                            b1.Navigation("Requisites");
                        });

                    b.OwnsOne("ZooHelp.Domain.VolunteerContext.ValueObjects.SocialNetworkList", "SocialNetworks", b1 =>
                        {
                            b1.Property<Guid>("VolunteerEntityId")
                                .HasColumnType("uuid");

                            b1.HasKey("VolunteerEntityId");

                            b1.ToTable("volunteers");

                            b1.ToJson("social_networks");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerEntityId")
                                .HasConstraintName("fk_volunteers_volunteers_id");

                            b1.OwnsMany("ZooHelp.Domain.VolunteerContext.ValueObjects.SocialNetwork", "SocialNetworks", b2 =>
                                {
                                    b2.Property<Guid>("SocialNetworkListVolunteerEntityId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("__synthesizedOrdinal")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Link")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("link");

                                    b2.HasKey("SocialNetworkListVolunteerEntityId", "__synthesizedOrdinal");

                                    b2.ToTable("volunteers");

                                    b2.ToJson("social_networks");

                                    b2.WithOwner()
                                        .HasForeignKey("SocialNetworkListVolunteerEntityId")
                                        .HasConstraintName("fk_volunteers_volunteers_social_network_list_volunteer_entity_id");

                                    b2.OwnsOne("ZooHelp.Domain.Shared.ValueObjects.Name", "Name", b3 =>
                                        {
                                            b3.Property<Guid>("SocialNetworkListVolunteerEntityId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("SocialNetwork__synthesizedOrdinal")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .ValueGeneratedOnUpdateSometimes()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("name");

                                            b3.HasKey("SocialNetworkListVolunteerEntityId", "SocialNetwork__synthesizedOrdinal");

                                            b3.ToTable("volunteers");

                                            b3.ToJson("social_networks");

                                            b3.WithOwner()
                                                .HasForeignKey("SocialNetworkListVolunteerEntityId", "SocialNetwork__synthesizedOrdinal")
                                                .HasConstraintName("fk_volunteers_volunteers_social_network_list_volunteer_entity_id_so");
                                        });

                                    b2.Navigation("Name")
                                        .IsRequired();
                                });

                            b1.Navigation("SocialNetworks");
                        });

                    b.Navigation("Description");

                    b.Navigation("RequisitesForHelp")
                        .IsRequired();

                    b.Navigation("SocialNetworks")
                        .IsRequired();
                });

            modelBuilder.Entity("ZooHelp.Domain.VolunteerContext.Entities.PetEntity", b =>
                {
                    b.HasOne("ZooHelp.Domain.SpeciesContext.Entities.BreedEntity", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pets_breeds_breed_id");

                    b.HasOne("ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity", null)
                        .WithMany("PetsFoundHome")
                        .HasForeignKey("VolunteerEntityId")
                        .HasConstraintName("fk_pets_volunteers_volunteer_entity_id");

                    b.HasOne("ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity", null)
                        .WithMany("PetsLookingForHome")
                        .HasForeignKey("VolunteerEntityId1")
                        .HasConstraintName("fk_pets_volunteers_volunteer_entity_id1");

                    b.HasOne("ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity", null)
                        .WithMany("PetsNeedsHelp")
                        .HasForeignKey("VolunteerEntityId2")
                        .HasConstraintName("fk_pets_volunteers_volunteer_entity_id2");

                    b.HasOne("ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity", null)
                        .WithMany("Pets")
                        .HasForeignKey("volunteer_id")
                        .HasConstraintName("fk_pets_volunteers_volunteer_id");

                    b.OwnsOne("ZooHelp.Domain.VolunteerContext.ValueObjects.RequisiteList", "RequisitesForHelp", b1 =>
                        {
                            b1.Property<Guid>("PetEntityId")
                                .HasColumnType("uuid");

                            b1.HasKey("PetEntityId")
                                .HasName("pk_pets");

                            b1.ToTable("pets");

                            b1.ToJson("requisites_for_help");

                            b1.WithOwner()
                                .HasForeignKey("PetEntityId")
                                .HasConstraintName("fk_pets_pets_pet_entity_id");

                            b1.OwnsMany("ZooHelp.Domain.VolunteerContext.ValueObjects.Requisite", "Requisites", b2 =>
                                {
                                    b2.Property<Guid>("RequisiteListPetEntityId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("__synthesizedOrdinal")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.HasKey("RequisiteListPetEntityId", "__synthesizedOrdinal");

                                    b2.ToTable("pets");

                                    b2.ToJson("requisites_for_help");

                                    b2.WithOwner()
                                        .HasForeignKey("RequisiteListPetEntityId")
                                        .HasConstraintName("fk_pets_pets_requisite_list_pet_entity_id");

                                    b2.OwnsOne("ZooHelp.Domain.Shared.ValueObjects.Description", "Description", b3 =>
                                        {
                                            b3.Property<Guid>("RequisiteListPetEntityId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("Requisite__synthesizedOrdinal")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .ValueGeneratedOnUpdateSometimes()
                                                .HasMaxLength(500)
                                                .HasColumnType("character varying(500)")
                                                .HasColumnName("description");

                                            b3.HasKey("RequisiteListPetEntityId", "Requisite__synthesizedOrdinal");

                                            b3.ToTable("pets");

                                            b3.ToJson("requisites_for_help");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisiteListPetEntityId", "Requisite__synthesizedOrdinal")
                                                .HasConstraintName("fk_pets_pets_requisite_list_pet_entity_id_requisite__synthesized_or");
                                        });

                                    b2.OwnsOne("ZooHelp.Domain.Shared.ValueObjects.Name", "Name", b3 =>
                                        {
                                            b3.Property<Guid>("RequisiteListPetEntityId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("Requisite__synthesizedOrdinal")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .ValueGeneratedOnUpdateSometimes()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("name");

                                            b3.HasKey("RequisiteListPetEntityId", "Requisite__synthesizedOrdinal");

                                            b3.ToTable("pets");

                                            b3.ToJson("requisites_for_help");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisiteListPetEntityId", "Requisite__synthesizedOrdinal")
                                                .HasConstraintName("fk_pets_pets_requisite_list_pet_entity_id_requisite__synthesized_or");
                                        });

                                    b2.Navigation("Description")
                                        .IsRequired();

                                    b2.Navigation("Name")
                                        .IsRequired();
                                });

                            b1.Navigation("Requisites");
                        });

                    b.Navigation("Breed");

                    b.Navigation("RequisitesForHelp")
                        .IsRequired();
                });

            modelBuilder.Entity("ZooHelp.Domain.SpeciesContext.Entities.SpeciesEntity", b =>
                {
                    b.Navigation("Breeds");
                });

            modelBuilder.Entity("ZooHelp.Domain.VolunteerContext.AgregateRoot.VolunteerEntity", b =>
                {
                    b.Navigation("Pets");

                    b.Navigation("PetsFoundHome");

                    b.Navigation("PetsLookingForHome");

                    b.Navigation("PetsNeedsHelp");
                });
#pragma warning restore 612, 618
        }
    }
}
